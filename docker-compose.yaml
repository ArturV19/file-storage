version: '3.8'

networks:
  default-network:
    driver: bridge

volumes:
  file-storage-data: {}

services:
  file-storage-service:
    container_name: file-storage-service
    build:
      dockerfile: Dockerfile
    env_file:
      .env
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    depends_on:
      file-storage-storage-migrate:
        condition: service_completed_successfully
    networks:
      - default-network
    volumes:
      - ./:/app

  file-storage-storage:
    image: postgres:alpine
    container_name: file-storage-storage
    env_file:
      .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - file-storage-data:/var/lib/postgresql/data
    networks:
      - default-network

  file-storage-storage-migrate:
    image: migrate/migrate:v4.15.2
    container_name: file-storage-storage-migrate
    env_file:
      .env
    volumes:
      - .:/migrations
    entrypoint: [
      "migrate",
      "-path", "/migrations/migrations",
      "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      "up"
    ]
    depends_on:
      file-storage-storage:
        condition: service_healthy
    networks:
      - default-network
